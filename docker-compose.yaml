services:
  client:
    env_file:
      - ./client/.env
    build: ./client
    depends_on:
      - boundary
    volumes:
      - ./client:/app

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  boundary:
    build:
      context: ./server
      dockerfile: boundary/Dockerfile
    env_file:
      - ./server/boundary/.env
    environment:
      - MOVIES_ROUTER_QUEUE=boundary_movies_router
      - CREDITS_ROUTER_QUEUE=boundary_credits_router
      - RATINGS_ROUTER_QUEUE=boundary_ratings_router
    depends_on:
      - rabbitmq
    ports:
      - "5000:5000"
    volumes:
      - ./server/boundary:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common



# ---------------- START OF BOUNDARY ROUTERS ----------------

  year_movies_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=boundary_movies_router
      - OUTPUT_QUEUES=filter_by_year_worker_1,filter_by_year_worker_2
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  join_credits_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=boundary_credits_router
      # - OUTPUT_QUEUES=join_credits_worker_1_credits,join_credits_worker_2_credits
      - OUTPUT_QUEUES=join_credits_worker_1_credits
      - BALANCER_TYPE=hash_function
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
      

# ---------------- END OF BOUNDARY ROUTERS ----------------

    
  join_credits_worker_1:
    build:
      context: ./server
      dockerfile: worker/join_credits/Dockerfile
    env_file:
      - ./server/worker/join_credits/.env
    environment:
      - ROUTER_CONSUME_QUEUE_MOVIES=join_credits_worker_1_movies
      - ROUTER_CONSUME_QUEUE_CREDITS=join_credits_worker_1_credits
      - ROUTER_PRODUCER_QUEUE=count_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/join_credits:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common


  filter_by_year_worker_1:
    build:
      context: ./server
      dockerfile: worker/filter_by_year/Dockerfile
    env_file:
      - ./server/worker/filter_by_year/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_year_worker_1
      - ROUTER_PRODUCER_QUEUE=country_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_year:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  filter_by_year_worker_2:
    build:
      context: ./server
      dockerfile: worker/filter_by_year/Dockerfile
    env_file:
      - ./server/worker/filter_by_year/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_year_worker_2
      - ROUTER_PRODUCER_QUEUE=country_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_year:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  country_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=country_router
      - OUTPUT_QUEUES=filter_by_country_worker_1,filter_by_country_worker_2
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
    
  filter_by_country_worker_1:
    build:
      context: ./server
      dockerfile: worker/filter_by_country/Dockerfile
    env_file:
      - ./server/worker/filter_by_country/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_country_worker_1
      - ROUTER_PRODUCER_QUEUE=join_movies_credits_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_country:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  filter_by_country_worker_2:
    build:
      context: ./server
      dockerfile: worker/filter_by_country/Dockerfile
    env_file:
      - ./server/worker/filter_by_country/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_country_worker_2
      - ROUTER_PRODUCER_QUEUE=join_movies_credits_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_country:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

# ===================================================================================
# ------------------------------------ Q3 -------------------------------------------
# ===================================================================================

  join_movies_credits_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=join_movies_credits_router
      # - OUTPUT_QUEUES=join_credits_worker_1_movies,join_credits_worker_2_movies
      - OUTPUT_QUEUES=join_credits_worker_1_movies
      - BALANCER_TYPE=hash_function
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common


  count_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=count_router
      - OUTPUT_QUEUES=count_worker_1
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common


  count_worker_1:
    build:
      context: ./server
      dockerfile: worker/count/Dockerfile
    env_file:
      - ./server/worker/count/.env
    environment:
      - ROUTER_CONSUME_QUEUE=count_worker_1
      - ROUTER_PRODUCER_QUEUE=top_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/count:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  top_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=top_router
      - OUTPUT_QUEUES=top_worker_1
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  top_worker_1:
    build:
      context: ./server
      dockerfile: worker/top/Dockerfile
    env_file:
      - ./server/worker/top/.env
    environment:
      - ROUTER_CONSUME_QUEUE=top_worker_1
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/top:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

# ===================================================================================
# ------------------------------------ Q5 -------------------------------------------
# ===================================================================================
  sentiment_analysis_worker:
    build:
      context: ./server
      dockerfile: worker/sentiment_analysis/Dockerfile
    env_file:
      - ./server/worker/sentiment_analysis/.env
    environment:
      - ROUTER_CONSUME_QUEUE=sentiment_analysis_worker
      - ROUTER_PRODUCER_QUEUE=average_sentiment_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/sentiment_analysis:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
    deploy:
      resources:
        limits:
          memory: 4G

  average_sentiment_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=average_sentiment_router
      - OUTPUT_QUEUES=average_sentiment_worker
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  average_sentiment_worker:
    build:
      context: ./server
      dockerfile: worker/average_sentiment/Dockerfile
    env_file:
      - ./server/worker/average_sentiment/.env
    environment:
      - ROUTER_CONSUME_QUEUE=average_sentiment_worker
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/average_sentiment:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
