services:
  client1:
    env_file:
      - ./client/.env
    build: ./client
    environment:
      - CLIENT_ID=1
    depends_on:
      - boundary
    volumes:
      - ./client:/app

  # client2:
  #   env_file:
  #     - ./client/.env
  #   build: ./client
  #   environment:
  #     - CLIENT_ID=2
  #   depends_on:
  #     - boundary
  #   volumes:
  #     - ./client:/app

  # client3:
  #   env_file:
  #     - ./client/.env
  #   build: ./client
  #   environment:
  #     - CLIENT_ID=3
  #   depends_on:
  #     - boundary
  #   volumes:
  #     - ./client:/app

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  boundary:
    build:
      context: ./server
      dockerfile: boundary/Dockerfile
    env_file:
      - ./server/boundary/.env
    environment:
      - MOVIES_ROUTER_QUEUE=boundary_movies_router
      - MOVIES_ROUTER_Q5_QUEUE=boundary_movies_Q5_router
      - CREDITS_ROUTER_QUEUE=boundary_credits_router
      - RATINGS_ROUTER_QUEUE=boundary_ratings_router
    depends_on:
      - rabbitmq
    ports:
      - "5000:5000"
    volumes:
      - ./server/boundary:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

# ---------------- START OF BOUNDARY ROUTERS ----------------

  year_movies_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=boundary_movies_router
      - OUTPUT_QUEUES=filter_by_year_worker_1,filter_by_year_worker_2
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  join_credits_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=boundary_credits_router
      - OUTPUT_QUEUES=join_credits_worker_1_credits,join_credits_worker_2_credits
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
    
# ---------------- END OF BOUNDARY ROUTERS ----------------
    
  join_credits_worker_1:
    build:
      context: ./server
      dockerfile: worker/join_credits/Dockerfile
    env_file:
      - ./server/worker/join_credits/.env
    environment:
      - ROUTER_CONSUME_QUEUE_MOVIES=join_credits_worker_1_movies
      - ROUTER_CONSUME_QUEUE_CREDITS=join_credits_worker_1_credits
      - ROUTER_PRODUCER_QUEUE=count_router
      - NUMBER_OF_CLIENTS=1
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/join_credits:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  join_credits_worker_2:
    build:
      context: ./server
      dockerfile: worker/join_credits/Dockerfile
    env_file:
      - ./server/worker/join_credits/.env
    environment:
      - ROUTER_CONSUME_QUEUE_MOVIES=join_credits_worker_2_movies
      - ROUTER_CONSUME_QUEUE_CREDITS=join_credits_worker_2_credits
      - ROUTER_PRODUCER_QUEUE=count_router
      - NUMBER_OF_CLIENTS=1
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/join_credits:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  filter_by_year_worker_1:
    build:
      context: ./server
      dockerfile: worker/filter_by_year/Dockerfile
    env_file:
      - ./server/worker/filter_by_year/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_year_worker_1
      - ROUTER_PRODUCER_QUEUE=country_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_year:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  filter_by_year_worker_2:
    build:
      context: ./server
      dockerfile: worker/filter_by_year/Dockerfile
    env_file:
      - ./server/worker/filter_by_year/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_year_worker_2
      - ROUTER_PRODUCER_QUEUE=country_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_year:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  country_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=country_router
      - OUTPUT_QUEUES=filter_by_country_worker_1,filter_by_country_worker_2
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
    
  filter_by_country_worker_1:
    build:
      context: ./server
      dockerfile: worker/filter_by_country/Dockerfile
    env_file:
      - ./server/worker/filter_by_country/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_country_worker_1
      - ROUTER_PRODUCER_QUEUE=join_movies_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_country:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  filter_by_country_worker_2:
    build:
      context: ./server
      dockerfile: worker/filter_by_country/Dockerfile
    env_file:
      - ./server/worker/filter_by_country/.env
    environment:
      - ROUTER_CONSUME_QUEUE=filter_by_country_worker_2
      - ROUTER_PRODUCER_QUEUE=join_movies_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/filter_by_country:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
# ===================================================================================
# ------------------------------------ Q3 -------------------------------------------
# ===================================================================================

  join_ratings_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=boundary_ratings_router
      - OUTPUT_QUEUES=join_ratings_worker_1_ratings,join_ratings_worker_2_ratings
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common


  join_ratings_worker_1:
    build:
      context: ./server
      dockerfile: worker/join_ratings/Dockerfile
    env_file:
      - ./server/worker/join_ratings/.env
    environment:
      - ROUTER_CONSUME_QUEUE_MOVIES=join_ratings_worker_1_movies
      - ROUTER_CONSUME_QUEUE_RATINGS=join_ratings_worker_1_ratings
      - ROUTER_PRODUCER_QUEUE=average_movies_by_rating_router
      - NUMBER_OF_CLIENTS=1
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/join_ratings:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  join_ratings_worker_2:
    build:
      context: ./server
      dockerfile: worker/join_ratings/Dockerfile
    env_file:
      - ./server/worker/join_ratings/.env
    environment:
      - ROUTER_CONSUME_QUEUE_MOVIES=join_ratings_worker_2_movies
      - ROUTER_CONSUME_QUEUE_RATINGS=join_ratings_worker_2_ratings
      - ROUTER_PRODUCER_QUEUE=average_movies_by_rating_router
      - NUMBER_OF_CLIENTS=1
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/join_ratings:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
      
  average_movies_by_rating_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=average_movies_by_rating_router
      - OUTPUT_QUEUES=[["average_movies_by_rating_worker_1"]]
      - BALANCER_TYPE=shard_by_ascii
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  average_movies_by_rating_worker_1:
    build:
      context: ./server
      dockerfile: worker/average_movies_by_rating/Dockerfile
    env_file:
      - ./server/worker/average_movies_by_rating/.env
    environment:
      - ROUTER_CONSUME_QUEUE=average_movies_by_rating_worker_1
      - ROUTER_PRODUCER_QUEUE=max_min_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/average_movies_by_rating:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  max_min_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=max_min_router
      - OUTPUT_QUEUES=[["max_min_worker_1"]]
      - BALANCER_TYPE=shard_by_ascii
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  max_min_worker_1:
    build:
      context: ./server
      dockerfile: worker/max_min/Dockerfile
    env_file:
      - ./server/worker/max_min/.env
    environment:
      - ROUTER_CONSUME_QUEUE=max_min_worker_1
      - ROUTER_PRODUCER_QUEUE=max_min_collector_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/max_min:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  max_min_collector_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=max_min_collector_router
      - OUTPUT_QUEUES=collector_max_min_worker
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  collector_max_min_worker:
    build:
      context: ./server
      dockerfile: worker/collector_max_min/Dockerfile
    env_file:
      - ./server/worker/collector_max_min/.env
    environment:
      - ROUTER_CONSUME_QUEUE=collector_max_min_worker
      - RESPONSE_QUEUE=response_queue
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/collector_max_min:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common


# ===================================================================================
# ------------------------------------ Q4 -------------------------------------------
# ===================================================================================

  # TODO: separate the consumers by level instead of queries
  join_movies_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=join_movies_router
      - OUTPUT_QUEUES=join_ratings_worker_1_movies,join_ratings_worker_2_movies,join_credits_worker_1_movies,join_credits_worker_2_movies
      - EXCHANGE_TYPE=fanout
      - EXCHANGE_NAME=join_router_exchange
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common


  count_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=count_router
      - OUTPUT_QUEUES=[["count_worker_1", "count_worker_2"],["count_worker_3", "count_worker_4"]]
      - BALANCER_TYPE=shard_by_ascii
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common


  count_worker_1:
    build:
      context: ./server
      dockerfile: worker/count/Dockerfile
    env_file:
      - ./server/worker/count/.env
    environment:
      - ROUTER_CONSUME_QUEUE=count_worker_1
      - ROUTER_PRODUCER_QUEUE=top_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/count:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  count_worker_2:
    build:
      context: ./server
      dockerfile: worker/count/Dockerfile
    env_file:
      - ./server/worker/count/.env
    environment:
      - ROUTER_CONSUME_QUEUE=count_worker_2
      - ROUTER_PRODUCER_QUEUE=top_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/count:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  count_worker_3:
    build:
      context: ./server
      dockerfile: worker/count/Dockerfile
    env_file:
      - ./server/worker/count/.env
    environment:
      - ROUTER_CONSUME_QUEUE=count_worker_3
      - ROUTER_PRODUCER_QUEUE=top_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/count:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  count_worker_4:
    build:
      context: ./server
      dockerfile: worker/count/Dockerfile
    env_file:
      - ./server/worker/count/.env
    environment:
      - ROUTER_CONSUME_QUEUE=count_worker_4
      - ROUTER_PRODUCER_QUEUE=top_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/count:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  top_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=4
      - INPUT_QUEUE=top_router
      - OUTPUT_QUEUES=[["top_worker_1"]]
      - BALANCER_TYPE=shard_by_ascii
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  top_worker_1:
    build:
      context: ./server
      dockerfile: worker/top/Dockerfile
    env_file:
      - ./server/worker/top/.env
    environment:
      - ROUTER_CONSUME_QUEUE=top_worker_1
      - ROUTER_PRODUCER_QUEUE=top_10_actors_collector_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/top:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  top_10_actors_collector_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=top_10_actors_collector_router
      - OUTPUT_QUEUES=collector_top_10_actors_worker
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  collector_top_10_actors_worker:
    build:
      context: ./server
      dockerfile: worker/collector_top_10_actors/Dockerfile
    env_file:
      - ./server/worker/collector_top_10_actors/.env
    environment:
      - ROUTER_CONSUME_QUEUE=collector_top_10_actors_worker
      - RESPONSE_QUEUE=response_queue
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/collector_top_10_actors:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

# ===================================================================================
# ------------------------------------ Q5 -------------------------------------------
# ===================================================================================
  movies_q5_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=1
      - INPUT_QUEUE=boundary_movies_Q5_router
      - OUTPUT_QUEUES=sentiment_analysis_worker_1,sentiment_analysis_worker_2
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  sentiment_analysis_worker_1:
    build:
      context: ./server
      dockerfile: worker/sentiment_analysis/Dockerfile
    env_file:
      - ./server/worker/sentiment_analysis/.env
    environment:
      - ROUTER_CONSUME_QUEUE=sentiment_analysis_worker_1
      - ROUTER_PRODUCER_QUEUE=average_sentiment_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/sentiment_analysis:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
    deploy:
      resources:
        limits:
          memory: 2G

  sentiment_analysis_worker_2:
    build:
      context: ./server
      dockerfile: worker/sentiment_analysis/Dockerfile
    env_file:
      - ./server/worker/sentiment_analysis/.env
    environment:
      - ROUTER_CONSUME_QUEUE=sentiment_analysis_worker_2
      - ROUTER_PRODUCER_QUEUE=average_sentiment_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/sentiment_analysis:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
    deploy:
      resources:
        limits:
          memory: 2G

  average_sentiment_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=average_sentiment_router
      - OUTPUT_QUEUES=[["average_sentiment_worker_1"],["average_sentiment_worker_2"]]
      - BALANCER_TYPE=shard_by_ascii
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
  average_sentiment_worker_1:
    build:
      context: ./server
      dockerfile: worker/average_sentiment/Dockerfile
    env_file:
      - ./server/worker/average_sentiment/.env
    environment:
      - ROUTER_CONSUME_QUEUE=average_sentiment_worker_1
      - ROUTER_PRODUCER_QUEUE=average_sentiment_collector_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/average_sentiment:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
  average_sentiment_worker_2:
    build:
      context: ./server
      dockerfile: worker/average_sentiment/Dockerfile
    env_file:
      - ./server/worker/average_sentiment/.env
    environment:
      - ROUTER_CONSUME_QUEUE=average_sentiment_worker_2
      - ROUTER_PRODUCER_QUEUE=average_sentiment_collector_router
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/average_sentiment:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common
  average_sentiment_collector_router:
    build:
      context: ./server
      dockerfile: router/Dockerfile
    env_file:
      - ./server/router/.env
    environment:
      - NUMBER_OF_PRODUCER_WORKERS=2
      - INPUT_QUEUE=average_sentiment_collector_router
      - OUTPUT_QUEUES=collector_average_sentiment_worker
      - BALANCER_TYPE=round_robin
    depends_on:
      - rabbitmq
    volumes:
      - ./server/router:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common

  collector_average_sentiment_worker:
    build:
      context: ./server
      dockerfile: worker/collector_average_sentiment_worker/Dockerfile
    env_file:
      - ./server/worker/collector_average_sentiment_worker/.env
    environment:
      - ROUTER_CONSUME_QUEUE=collector_average_sentiment_worker
      - RESPONSE_QUEUE=response_queue
    depends_on:
      - rabbitmq
    volumes:
      - ./server/worker/collector_average_sentiment_worker:/app
      - ./server/rabbitmq:/app/rabbitmq
      - ./server/common:/app/common